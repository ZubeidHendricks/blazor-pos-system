@page "/reports"
@attribute [Authorize(Policy = "ViewReports")]
@inject HttpClient HttpClient

<div class="reports-container">
    <h3>Business Reports</h3>

    <div class="report-filters">
        <label>Date Range:</label>
        <input type="date" @bind="startDate" />
        <input type="date" @bind="endDate" />
        <button @onclick="GenerateSalesReport">Generate Sales Report</button>
    </div>

    @if (salesReport != null)
    {
        <div class="sales-summary">
            <h4>Sales Summary</h4>
            <p>Total Revenue: @salesReport.TotalRevenue.ToString("C")</p>
            <p>Total Sales: @salesReport.TotalSales</p>
            <p>Average Order Value: @salesReport.AverageOrderValue.ToString("C")</p>

            <h5>Top Selling Products</h5>
            <table>
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Quantity Sold</th>
                        <th>Total Revenue</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in salesReport.TopProducts)
                    {
                        <tr>
                            <td>@product.ProductName</td>
                            <td>@product.QuantitySold</td>
                            <td>@product.TotalRevenue.ToString("C")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    <div class="inventory-report">
        <h4>Inventory Overview</h4>
        <p>Total Unique Products: @inventoryReport?.TotalUniqueProducts</p>
        <p>Total Inventory Value: @inventoryReport?.TotalInventoryValue.ToString("C")</p>

        <h5>Low Stock Products</h5>
        <table>
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Current Stock</th>
                    <th>Unit Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in inventoryReport?.LowStockProducts ?? new())
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>@product.CurrentStock</td>
                        <td>@product.UnitPrice.ToString("C")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private DateTime startDate = DateTime.Now.AddMonths(-1);
    private DateTime endDate = DateTime.Now;
    private SalesSummaryReport salesReport;
    private InventoryReport inventoryReport;

    protected override async Task OnInitializedAsync()
    {
        await LoadInventoryReport();
    }

    private async Task GenerateSalesReport()
    {
        salesReport = await HttpClient.GetFromJsonAsync<SalesSummaryReport>(
            $"api/report/sales?startDate={startDate:O}&endDate={endDate:O}");
    }

    private async Task LoadInventoryReport()
    {
        inventoryReport = await HttpClient.GetFromJsonAsync<InventoryReport>("api/report/inventory");
    }
}